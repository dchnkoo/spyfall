"""empty message

Revision ID: 72c0c1cd96cd
Revises: 
Create Date: 2024-11-23 21:40:20.653564

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '72c0c1cd96cd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('telegramuser',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('is_bot', sa.Boolean(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('language_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('added_to_attachment_menu', sa.Boolean(), nullable=True),
    sa.Column('can_join_groups', sa.Boolean(), nullable=True),
    sa.Column('can_read_all_group_messages', sa.Boolean(), nullable=True),
    sa.Column('supports_inline_queries', sa.Boolean(), nullable=True),
    sa.Column('can_connect_to_business', sa.Boolean(), nullable=True),
    sa.Column('has_main_web_app', sa.Boolean(), nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_date', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('package',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scope', sa.Enum('PRIVATE', 'PUBLIC', name='packagescope'), nullable=False),
    sa.Column('type', sa.Enum('BASE', 'USER', name='packagetype'), nullable=False),
    sa.Column('created_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('owner_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['telegramuser.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('package_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('created_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('package_id', sa.Uuid(), nullable=True),
    sa.Column('use_locations_id', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('use_roles_id', sa.JSON(), nullable=False),
    sa.Column('two_spies', sa.Boolean(), nullable=False),
    sa.Column('know_each_other', sa.Boolean(), nullable=False),
    sa.Column('round_time', sa.Interval(), nullable=False),
    sa.Column('rounds', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['telegramuser.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('location_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('role')
    op.drop_table('settings')
    op.drop_table('location')
    op.drop_table('package')
    op.drop_table('telegramuser')
    # ### end Alembic commands ###
